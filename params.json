{
  "name": "Computer Science In Real Life",
  "tagline": "Computer Science In Real Life",
  "body": "![SMN - Sciences Manuelles du Numérique -- déconstruire l'informatique pour mieux la saisir](https://github.com/jcb/CSIRL/raw/master/logo.png)\r\n\r\nTrop souvent, lorsque l'on parle d'informatique, on pense à l'ordinateur\r\nutilisé comme outil. L'informatique devient alors l'art d'utiliser l'ordinateur\r\npour une tâche donnée, ou de le réparer. Pourtant, dans les entrailles de cette\r\nmachine se cache un domaine scientifique très vaste, dont les ramifications\r\ndépassent largement l'ordinateur et son fonctionnement.\r\n\r\nLe projet **Sciences Manuelles du Numérique** vous propose d'explorer la\r\nscience informatique... en retirant l'ordinateur ! Pour cela, nous avons conçu\r\nune série d'activités ludiques introduisant des notions fondamentales de\r\nl'informatique par le biais d'un support matériel, pour *apprendre avec les\r\nmains*. Ces activités sont regroupées en séances thématiques, permettant ainsi\r\nd'aborder les notions fondamentales de manière cohérente et progressive.\r\n\r\n**SMN** est un projet libre : vous trouverez ici toutes les ressources\r\nnécessaires à la production du matériel pour les activités. Notez qu'il\r\ns'appelait **CSIRL** comme **Computer Science In Real Life**, d'où le nom du\r\ndépôt. Pour des raisons marketing, il a été renommé en français en incluant le\r\nmot numérique.\r\n\r\n# Séance algorithmique\r\n\r\nCette séance introduit quelques principes fondamentaux de l'algorithmique au\r\ntravers de quatre activités\r\n\r\n## Le jeu de Nim\r\n\r\nDeux joueurs ramassent tour à tour 1, 2 ou 3 allumettes sur une table. Celui\r\nqui prend la dernière à gagné. A travers ce jeu bien connu, nous introduisons\r\nla notion d'algorithme comme stratégie gagnante pour résoudre un problème.\r\n\r\n## Le crêpier psycho-rigide\r\n\r\nCe problème de tri assez simple nous permet d'introduire la notion de\r\nformalisation d'algorithme. En effet, un algorithme n'est utile que si on peut\r\nl'expliquer à un ordinateur. Le but de l'exercice est donc de trouver la\r\nsolution au problème, puis de l'exprimer étape par étape, de manière\r\nrigoureuse. Au passage, c'est aussi l'occasion d'introduire la notion de\r\nperformance en calculant le nombre d'étapes nécessaires à résoudre un problème\r\nde taille N.\r\n\r\n## Le baseball multicolore\r\n\r\nDes joueurs de couleur se déplacent pour rejoindre la base de leur couleur en\r\ntournant autour du terrain. Il existe diverses méthodes pour résoudre le\r\nproblème, mais comment être sûr qu'une méthode donnée est correcte ? Cette\r\nactivité introduit la notion de correction d'algorithme, et les moyens utilisés\r\npar les chercheurs en informatique pour la prouver.\r\n\r\n## Plus court chemin\r\n\r\nSur une planche à clous, on fait passer un fil une fois et une seule par chaque\r\nclou avant de revenir au point de départ. Comment trouver le chemin le plus\r\ncourt possible ? Ce problème d'optimisation aux applications innombrables nous\r\npermet d'introduire la notion de complexité pour classer les problèmes, et la\r\nrecherche de solution optimale ou approchée.\r\n\r\n## Les 8 reines (en cours de développement)\r\n\r\nComment placer huit reines sur un échiquier de sorte qu'aucune ne soit sur la\r\ntrajectoire d'une autre ? La résolution de ce problème nous permet d'introduire\r\nles notions de récursivité et de back-tracking.\r\n\r\n# Ressources\r\n\r\n- Vous trouverez les version PDF des différentes activités dans [la section\r\n  \"downloads\" de ce site](https://github.com/jcb/CSIRL/downloads).\r\n- Si vous souhaitez fabriquer vous-même un kit, [le répertoire\r\n  \"supports\"](https://github.com/jcb/CSIRL/tree/master/supports) contient\r\nquelques fichiers qui pourront vous aider, tels que des plans de découpe pour\r\nla fabrication des crêpes.\r\n- Des vidéos explicatives des activités produites par Inria seront bientôt\r\n  disponibles en ligne.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}